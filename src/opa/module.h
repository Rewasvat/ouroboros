#ifndef OUROBOROS_SCRIPT_MODULE_H_
#define OUROBOROS_SCRIPT_MODULE_H_

#include <string>

namespace opa {

/// Templatized class representing a script module.
/** Templatized class representing a physical script module for a VM,
    and not a loaded module (in the VM). This class is tipically used
    to represent and hold the appropriate data of a generated module
    (module generated by a wrapper generator, such as OPWIG), so that
    the VM can properly initialize the module so that it is usable.

    The template argument should be the signature of the initialization
    function.
* @tparam loader_t signature of the initialization function.
* @see opa::InheritableVirtualMachine
*/     
template <class loader_t>
class Module {
  public:
    /// Initializes the Module with the given values.
    /** Initializes the module with the given values.
    * @param name is the name of the module.
    * @param init_func is the pointer to the initialization function of the module.
    */
    Module(const std::string& name, loader_t init_func) :
        name_(name),
        init_func_(init_func) {}
    /// Gets the name of the module.
    const std::string& name() const { return name_; }
    /// Gets the pointer to the initialization function.
    loader_t init_func() const { return init_func_; }
  private:
    std::string     name_;
    loader_t        init_func_;
};

} /* namespace opa */

#endif /* OUROBOROS_SCRIPT_MODULE_H_ */
