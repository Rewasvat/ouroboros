// Generated by Flexc++ V1.02.00 on Wed, 06 Mar 2013 08:59:35 -0300

#ifndef MDScanner_H_INCLUDED_
#define MDScanner_H_INCLUDED_

// $insert baseclass_h
#include <opwig/parser/mdscannerbase.h>

// $insert namespace-open
namespace opwig
{

// $insert classHead
class MDScanner: public MDScannerBase
{
    public:
        explicit MDScanner(std::istream &in = std::cin,
                                std::ostream &out = std::cout);

        MDScanner(std::string const &infile, std::string const &outfile);
        
        // $insert lexFunctionDecl
        int lex();

    private:
        int lex__();
        int executeAction__(size_t ruleNr);

        void print();
        void preCode();     // re-implement this function for code that must 
                            // be exec'ed before the patternmatching starts
};

// $insert scannerConstructors
inline MDScanner::MDScanner(std::istream &in, std::ostream &out)
:
    MDScannerBase(in, out)
{}

inline MDScanner::MDScanner(std::string const &infile, std::string const &outfile)
:
    MDScannerBase(infile, outfile)
{}

// $insert inlineLexFunction
inline int MDScanner::lex()
{
    return lex__();
}

inline void MDScanner::preCode() 
{
    // optionally replace by your own code
}

inline void MDScanner::print() 
{
    print__();
}

// $insert namespace-close
}

#endif // MDScanner_H_INCLUDED_

