//=========================// EXPRESSIONS //

constant_expression:
    ignored_code
;

ignored_code:
    {} | expression separator ignored_code
;

separator:
    {} | ';' | ',' | '='
;

expression:
    term
|
    expression term
;

term:
    literal
|
    identifier | PRIMITIVE | VOID | TYPE_NAME | CONSTRUCTOR_NAME
|
    operand
|
    SCOPE_OPERATOR | ASSIGNMENT_OPERATOR | EXPRESSION_OPERATOR
|
    WHILE | FOR
|
    IF
|
    TRY | CATCH | THROW
|
    USING
|
    TRUE | FALSE
|
    SIZEOF
|
    SIGNED | UNSIGNED
|
    REGISTER
|
    DELETE
|
    RETURN
|
    CONST | STATIC | VOLATILE
|
    ASM
|
    AUTO
|
    '(' ignored_code ')' 
|
    '[' ignored_code ']'
|
    '{' ignored_code '}'
;


literal:
    STRING_LITERAL
|
    CHARACTER_LITERAL
|
    INTEGER_LITERAL
|
    HEXADECIMAL_LITERAL
|
    OCTAL_LITERAL
|
    FLOAT_LITERAL
;

operand:
    '+' | '-' | '*' | '/' | '%' | '^' | '?' | ':' | '|' | '&' | '>' | '<' | '!' | '~';
