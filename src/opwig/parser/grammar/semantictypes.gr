%polymorphic
  Declaration:      ScopeAction;
  DeclarationSeq:   std::shared_ptr<ScopeActionList>;
  Type:             TypeAction;
  Class:            md::Ptr<md::Class>;
  BaseSpecifier:    parser::BaseSpecifier;
  BaseSpecifierSeq: std::shared_ptr<BaseSpecifierList>;
  AccessSpecifier:  parser::AccessSpecifier;
  Declarator:       parser::Declarator;
  DeclaratorSeq:    std::shared_ptr<parser::DeclaratorList>;
  Parameter:        md::Parameter;
  ParameterSeq:     std::shared_ptr<md::ParameterList>;
  String:           std::string;
  StringSeq:        std::shared_ptr<StringList>;

%token IDENTIFIER
%token PRIMITIVE

// Keywords
%token CATCH
%token CLASS
%token CONST
%token ENUM
%token EXPLICIT
%token EXPORT
%token EXTERN
%token FALSE
%token FRIEND
%token INLINE
%token MUTABLE
%token NAMESPACE
%token OPERATOR
%token PRIVATE
%token PROTECTED
%token PUBLIC
%token REGISTER
%token RETURN
%token SIGNED
%token SIZEOF
%token STATIC
%token STRUCT
%token TEMPLATE
%token THROW
%token TRUE
%token TRY
%token TYPEDEF
%token TYPEID
%token TYPENAME
%token UNION
%token UNSIGNED
%token USING
%token VIRTUAL
%token VOID
%token VOLATILE

// Literals
%token STRING_LITERAL
%token CHARACTER_LITERAL
%token INTEGER_LITERAL
%token HEXADECIMAL_LITERAL
%token OCTAL_LITERAL
%token FLOAT_LITERAL

%type<DeclarationSeq>       declaration_seq
%type<Declaration>          declaration
%type<Declaration>          block_declaration
%type<Declaration>          simple_declaration
%type<Declaration>          namespace_definition
%type<Declaration>          named_namespace_definition
%type<Declaration>          unnamed_namespace_definition

%type<Type>                 decl_specifier_seq
%type<Type>                 type_specifier
%type<Type>                 trailing_type_specifier
%type<Type>                 simple_type_specifier
%type<Type>                 class_specifier

%type<Class>                class_head

%type<BaseSpecifierSeq>     base_clause
%type<BaseSpecifierSeq>     base_specifier_list

%type<BaseSpecifier>        base_specifier

%type<AccessSpecifier>      access_specifier

%type<String>         identifier
%type<String>         type_name
%type<String>         declarator_id
%type<String>         class_head_name
%type<String>         base_type_specifier
%type<String>         class_name

%type<DeclaratorSeq>  init_declarator_list
%type<Declarator>     init_declarator
%type<Declarator>     declarator
%type<Declarator>     ptr_declarator
%type<Declarator>     noptr_declarator

%type<ParameterSeq>   parameters_and_qualifiers
%type<ParameterSeq>   parameter_declaration_clause
%type<ParameterSeq>   parameter_declaration_list
%type<Parameter>      parameter_declaration
